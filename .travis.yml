language: cpp
cache: ccache

matrix:
  include:
    - name: OpenCL macOS
      os: osx
      addons:
        homebrew:
          update: true
          packages:
            - bison
            - ccache
            - ceres-solver
            - CMake
            - doxygen
            - faac
            - faad2
            - ffmpeg
            - glew
            - glfw
            - glm
            - jpeg
            - libpng
            - libtiff
            - ninja
            - opencv@3
            - qt
            - yasm
      before_install:
        - export PATH="/usr/local/opt/bison/bin:/usr/local/opt/ccache/libexec:${PATH}"
      script:
        - mkdir build
        - cd build
        - cmake -DCREATE_BOX_PACKAGE=OFF -DGPU_BACKEND_CUDA=OFF -DGPU_BACKEND_OPENCL=ON -DAPPLE_BREW=ON -DQt5_DIR=/usr/local/opt/qt/lib/cmake/Qt5 -G Ninja ..
        - ninja
    - name: CUDA 8 Linux
      dist: xenial
      services:
        - docker
      before_script:
        - docker build --tag stitchem-cuda8:latest --file docker/ci.dockerfile --build-arg version=8 .
        - docker create -v ${HOME}/.ccache:/ccache --name ccache stitchem-cuda8:latest
      script:
        - docker run --env CCACHE_DIR=/ccache --volumes-from ccache stitchem-cuda8:latest
    - name: CUDA 9 Linux
      dist: xenial
      services:
        - docker
      before_script:
        - docker build --tag stitchem-cuda9:latest --file docker/ci.dockerfile --build-arg version=9 .
        - docker create -v ${HOME}/.ccache:/ccache --name ccache stitchem-cuda9:latest
      script:
        - docker run --env CCACHE_DIR=/ccache --volumes-from ccache stitchem-cuda9:latest
    - name: CUDA 10 Linux
      dist: xenial
      services:
        - docker
      before_script:
        - docker build --tag stitchem-cuda10:latest --file docker/ci.dockerfile --build-arg version=10 .
        - docker create -v ${HOME}/.ccache:/ccache --name ccache stitchem-cuda10:latest
      script:
        - docker run --env CCACHE_DIR=/ccache --volumes-from ccache stitchem-cuda10:latest
